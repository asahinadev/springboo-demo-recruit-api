package com.example.spring.hotpepper.request;

import java.util.List;

import org.springframework.util.MultiValueMap;

import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class GourmetRequest extends CommonRequest {

	List<String> id;
	String name;
	String name_kana;
	String name_any;
	String tel;
	String address;
	List<String> special;
	List<String> special_or;
	List<String> special_category;
	List<String> special_category_or;
	String large_service_area;
	List<String> service_area;
	List<String> large_area;
	List<String> middle_area;
	List<String> small_area;
	List<String> keyword;
	double lat = Double.NEGATIVE_INFINITY;
	double lng = Double.NEGATIVE_INFINITY;
	int range = 0;
	String datum;
	String ktai_coupon;
	List<String> genre;
	List<String> budget;
	int party_capacity;
	int wifi = 0;
	int wedding = 0;
	int course = 0;
	int free_drink = 0;
	int free_food = 0;
	int private_room = 0;
	int horigotatsu = 0;
	int tatami = 0;
	int cocktail = 0;
	int shochu = 0;
	int sake = 0;
	int wine = 0;
	int card = 0;
	int non_smoking = 0;
	int charter = 0;
	int ktai = 0;
	int parking = 0;
	int barrier_free = 0;
	int sommelier = 0;
	int night_view = 0;
	int open_air = 0;
	int show = 0;
	int equipment = 0;
	int karaoke = 0;
	int band = 0;
	int tv = 0;
	int lunch = 0;
	int midnight = 0;
	int midnight_meal = 0;
	int english = 0;
	int pet = 0;
	int child = 0;
	List<String> credit_card;
	String type;
	int order;
	int start = 0;
	int count = 0;

	public MultiValueMap<String, String> queries(String apiKey) {
		var queries = super.queries(apiKey);
		set(queries, "id", id);
		set(queries, "name", name);
		set(queries, "name_kana", name_kana);
		set(queries, "name_any", name_any);
		set(queries, "tel", tel);
		set(queries, "address", address);
		set(queries, "special", special);
		set(queries, "special_or", special_or);
		set(queries, "special_category", special_category);
		set(queries, "special_category_or", special_category_or);
		set(queries, "large_service_area", large_service_area);
		set(queries, "service_area", service_area);
		set(queries, "large_area", large_area);
		set(queries, "middle_area", middle_area);
		set(queries, "small_area", small_area);
		set(queries, "keyword", keyword);
		set(queries, "lat", lat);
		set(queries, "lng", lng);
		set(queries, "range", range);
		set(queries, "datum", datum);
		set(queries, "ktai_coupon", ktai_coupon);
		set(queries, "genre", genre);
		set(queries, "budget", budget);
		set(queries, "party_capacity", party_capacity);
		set(queries, "wifi", wifi);
		set(queries, "wedding", wedding);
		set(queries, "course", course);
		set(queries, "free_drink", free_drink);
		set(queries, "free_food", free_food);
		set(queries, "private_room", private_room);
		set(queries, "horigotatsu", horigotatsu);
		set(queries, "tatami", tatami);
		set(queries, "cocktail", cocktail);
		set(queries, "shochu", shochu);
		set(queries, "sake", sake);
		set(queries, "wine", wine);
		set(queries, "card", card);
		set(queries, "non_smoking", non_smoking);
		set(queries, "charter", charter);
		set(queries, "ktai", ktai);
		set(queries, "parking", parking);
		set(queries, "barrier_free", barrier_free);
		set(queries, "sommelier", sommelier);
		set(queries, "night_view", night_view);
		set(queries, "open_air", open_air);
		set(queries, "show", show);
		set(queries, "equipment", equipment);
		set(queries, "karaoke", karaoke);
		set(queries, "band", band);
		set(queries, "tv", tv);
		set(queries, "lunch", lunch);
		set(queries, "midnight", midnight);
		set(queries, "midnight_meal", midnight_meal);
		set(queries, "english", english);
		set(queries, "pet", pet);
		set(queries, "child", child);
		set(queries, "credit_card", credit_card);
		set(queries, "type", type);
		set(queries, "order", order);
		set(queries, "start", start);
		set(queries, "count", count);
		return queries;
	}
}
